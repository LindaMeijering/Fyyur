from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8b96b315ccd4'
down_revision = '9a68e4f99df3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('shows',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('start_time', sa.DateTime(), nullable=False),
                    sa.Column('artist_id', sa.Integer(), nullable=True),
                    sa.Column('venue_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['artist_id'], ['artist.id'], ),
                    sa.ForeignKeyConstraint(['venue_id'], ['venue.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.add_column('artist', sa.Column('seeking_venue', sa.Boolean(),
                  nullable=False, server_default=sa.false()))
    op.add_column('artist', sa.Column(
        'seeking_description', sa.String(), nullable=True))
    op.alter_column('artist', 'facebook_link',
                    existing_type=sa.VARCHAR(length=120),
                    nullable=True)
    op.add_column('venue', sa.Column('seeking_talent', sa.Boolean(),
                  nullable=False, server_default=sa.false()))
    # ### end Alembic commands ###

    # Update existing records to have default values
    op.execute(
        'UPDATE artist SET seeking_venue = FALSE WHERE seeking_venue IS NULL')
    op.execute(
        'UPDATE venue SET seeking_talent = FALSE WHERE seeking_talent IS NULL')


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('venue', 'seeking_talent')
    op.alter_column('artist', 'facebook_link',
                    existing_type=sa.VARCHAR(length=120),
                    nullable=False)
    op.drop_column('artist', 'seeking_description')
    op.drop_column('artist', 'seeking_venue')
    op.drop_table('shows')
    # ### end Alembic commands ###
